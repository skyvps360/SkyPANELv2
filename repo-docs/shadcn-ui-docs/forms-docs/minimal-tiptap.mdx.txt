# Minimal Tiptap
URL: /components/forms/minimal-tiptap
Rich text editor built with Tiptap providing essential formatting tools and markdown support. Perfect for React applications requiring content editing with Next.js integration and TypeScript support.

***

title: Minimal Tiptap
description: Rich text editor built with Tiptap providing essential formatting tools and markdown support. Perfect for React applications requiring content editing with Next.js integration and TypeScript support.
icon: Type
----------

<PoweredBy
  packages={[
{ name: "Tiptap", url: "https://tiptap.dev/" },
{ name: "Lucide React", url: "https://lucide.dev/" }
]}
/>

<Preview path="minimal-tiptap" />

## Installation

<Installer packageName="minimal-tiptap" />

## Features

* **Rich text formatting** with bold, italic, strikethrough, and inline code using Tiptap extensions
* **Heading support** with H1, H2, and H3 levels for content structure and hierarchy
* **List creation** with bullet points and numbered lists for organized content presentation
* **Blockquotes and horizontal rules** for enhanced content styling and visual separation
* **Undo/redo functionality** with full history tracking and keyboard shortcuts support
* **TypeScript support** with complete interface definitions for all editor props and configurations

## Use Cases

This free open source React component works well for:

* **Content management systems** - Blog post editors and article creation in Next.js applications
* **Documentation platforms** - Technical writing tools with markdown-like formatting using TypeScript
* **Comment systems** - User-generated content with rich formatting capabilities and Tailwind CSS styling
* **Note-taking applications** - Personal and collaborative writing tools with real-time updates

## API Reference

### MinimalTiptap

| Prop          | Type                        | Default             | Description                                 |
| ------------- | --------------------------- | ------------------- | ------------------------------------------- |
| `content`     | `string`                    | `""`                | Initial HTML content for the editor         |
| `onChange`    | `(content: string) => void` | -                   | Callback fired when editor content changes  |
| `placeholder` | `string`                    | `"Start typing..."` | Placeholder text shown when editor is empty |
| `editable`    | `boolean`                   | `true`              | Whether the editor is editable or read-only |
| `className`   | `string`                    | -                   | CSS classes for container styling           |

### Toolbar Features

* **Text formatting** - Bold, italic, strikethrough, and inline code formatting
* **Headings** - H1, H2, H3 heading levels with semantic markup
* **Lists** - Bullet lists and numbered lists with proper nesting
* **Content blocks** - Blockquotes for emphasized content and horizontal rules
* **History** - Undo and redo operations with keyboard shortcuts (Ctrl+Z/Ctrl+Y)

### Editor Configuration

* **Extensions** - Built on Tiptap StarterKit with essential editing capabilities
* **Prose styling** - Tailwind Typography classes for beautiful content rendering
* **Keyboard shortcuts** - Standard shortcuts for formatting (Ctrl+B, Ctrl+I, etc.)
* **Focus management** - Automatic focus handling for seamless editing experience

## Implementation Notes

* Uses Tiptap's StarterKit for core functionality and extension management
* Content is stored and retrieved as HTML for easy integration with backends
* Toolbar buttons dynamically update based on current selection and cursor position
* Editor automatically handles list item management and block-level element creation
* Component forwards standard HTML div props for flexible integration scenarios
* All formatting operations maintain proper semantic HTML structure for accessibility
