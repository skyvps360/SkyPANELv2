# Animated Beam
URL: /components/special-effects/animated-beam
Animated beam connection component for React and Next.js applications. Built with TypeScript support, Tailwind CSS styling, and shadcn/ui design featuring SVG path animations, bidirectional flow, and customizable gradients.

***

title: Animated Beam
description: Animated beam connection component for React and Next.js applications. Built with TypeScript support, Tailwind CSS styling, and shadcn/ui design featuring SVG path animations, bidirectional flow, and customizable gradients.
icon: Zap
---------

<PoweredBy
  packages={[
{ name: 'Motion', url: 'https://motion.dev/' },
]}
/>

<Preview path="animated-beam" />

## Installation

<Installer packageName="animated-beam" />

## Features

* **SVG path animations** - Smooth curved and straight beam connections using Motion library
* **Bidirectional flow** - Reverse animation support for complex data visualizations using JavaScript
* **Automatic positioning** - Dynamic path calculation between elements using React refs
* **Customizable gradients** - Color, timing, curvature, and offset controls using TypeScript props
* **Responsive design** - ResizeObserver integration for container updates in Next.js applications
* **Performance optimized** - GPU-accelerated transforms with efficient rendering using Tailwind CSS
* **Accessibility features** - ARIA attributes and reduced motion support using shadcn/ui patterns
* **Open source** - Free component with comprehensive API and documentation

## Examples

### Bidirectional Beam

<Preview path="animated-beam-bidirectional" />

### Multiple Outputs

<Preview path="animated-beam-multiple-outputs" />

## API Reference

### AnimatedBeam

| Prop                 | Type                     | Default                 | Description                                                                                       |
| -------------------- | ------------------------ | ----------------------- | ------------------------------------------------------------------------------------------------- |
| `className`          | `string`                 | `undefined`             | Additional CSS class names to apply to the beam component                                         |
| `containerRef`       | `RefObject<HTMLElement>` | **required**            | Ref to the container element that wraps the beam and its connected elements                       |
| `fromRef`            | `RefObject<HTMLElement>` | **required**            | Ref to the source element where the beam animation starts                                         |
| `toRef`              | `RefObject<HTMLElement>` | **required**            | Ref to the target element where the beam animation ends                                           |
| `curvature`          | `number`                 | `0`                     | Controls the curve of the beam path. Positive values curve upward, negative values curve downward |
| `reverse`            | `boolean`                | `false`                 | Reverses the animation direction, making the beam flow from target to source                      |
| `duration`           | `number`                 | `Math.random() * 3 + 4` | Animation duration in seconds. Random by default for organic feel                                 |
| `delay`              | `number`                 | `0`                     | Delay before animation starts in seconds                                                          |
| `pathColor`          | `string`                 | `"gray"`                | Color of the static beam path background                                                          |
| `pathWidth`          | `number`                 | `2`                     | Width of the beam path in pixels                                                                  |
| `pathOpacity`        | `number`                 | `0.2`                   | Opacity of the static beam path (0-1)                                                             |
| `gradientStartColor` | `string`                 | `"#ffaa40"`             | Starting color of the animated gradient beam                                                      |
| `gradientStopColor`  | `string`                 | `"#9c40ff"`             | Ending color of the animated gradient beam                                                        |
| `startXOffset`       | `number`                 | `0`                     | Horizontal offset from the source element center in pixels                                        |
| `startYOffset`       | `number`                 | `0`                     | Vertical offset from the source element center in pixels                                          |
| `endXOffset`         | `number`                 | `0`                     | Horizontal offset from the target element center in pixels                                        |
| `endYOffset`         | `number`                 | `0`                     | Vertical offset from the target element center in pixels                                          |

## Use Cases

* **Data flow diagrams** - Visualize data movement between services and components
* **Process workflows** - Illustrate step-by-step operations with animated connections
* **Dashboard connections** - Link widgets and metrics with visual relationships
* **System architecture** - Show communication paths in technical diagrams

## Implementation

Built with Motion for smooth SVG animations. Uses React refs for automatic positioning. Supports custom gradients and bidirectional flow. ResizeObserver handles responsive updates.
