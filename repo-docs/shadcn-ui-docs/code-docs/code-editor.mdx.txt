# Code Editor
URL: /components/code/code-editor
Animated code editor component for React and Next.js applications. Built with TypeScript support, Tailwind CSS styling, and shadcn/ui design featuring syntax highlighting, typing animations, and customizable themes.

***

title: Code Editor
description: Animated code editor component for React and Next.js applications. Built with TypeScript support, Tailwind CSS styling, and shadcn/ui design featuring syntax highlighting, typing animations, and customizable themes.
icon: Code
----------

<PoweredBy
  packages={[
{ name: 'Motion', url: 'https://motion.dev/' },
{ name: 'Shiki', url: 'https://shiki.style/' },
{ name: 'next-themes', url: 'https://github.com/pacocoursey/next-themes' },
]}
/>

<Preview path="code-editor" />

## Installation

<Installer packageName="code-editor" />

## Features

* **Syntax highlighting** - Multi-language support with Shiki integration using JavaScript parsing
* **Typing animations** - Realistic code writing simulation with configurable speed using Motion library
* **Theme switching** - Light/dark mode support with next-themes integration for React applications
* **Copy functionality** - Built-in copy button with custom callback support using TypeScript handlers
* **Viewport detection** - InView animations with configurable margins for Next.js projects
* **Customizable header** - macOS-style window with dots, title, and icon support using Tailwind CSS
* **Cursor animation** - Blinking cursor effect during typing simulation using CSS animations
* **Open source** - Free code editor component with shadcn/ui theming and accessibility features

## Examples

### With Custom Theme

<Preview path="code-editor-theme" />

### No Writing Animation

<Preview path="code-editor-static" />

## Use Cases

* **Documentation sites** - Code examples with syntax highlighting and copy functionality
* **Tutorial platforms** - Step-by-step coding demonstrations with typing effects
* **Portfolio showcases** - Interactive code displays for developer presentations
* **Demo applications** - Code snippet previews with realistic animation timing

## API Reference

### CodeEditor

| Prop           | Type                              | Default                                          | Description                                      |
| -------------- | --------------------------------- | ------------------------------------------------ | ------------------------------------------------ |
| `children`     | `string`                          | **required**                                     | The code content to display and animate          |
| `lang`         | `string`                          | **required**                                     | Programming language for syntax highlighting     |
| `themes`       | `{ light: string; dark: string }` | `{ light: 'github-light', dark: 'github-dark' }` | Shiki theme names for light and dark modes       |
| `duration`     | `number`                          | `5`                                              | Animation duration in seconds for typing effect  |
| `delay`        | `number`                          | `0`                                              | Delay before animation starts in seconds         |
| `header`       | `boolean`                         | `true`                                           | Show macOS-style header with traffic lights      |
| `dots`         | `boolean`                         | `true`                                           | Show colored dots in header (red, yellow, green) |
| `icon`         | `React.ReactNode`                 | `undefined`                                      | Icon to display next to title in header          |
| `cursor`       | `boolean`                         | `false`                                          | Show blinking cursor during typing animation     |
| `inView`       | `boolean`                         | `false`                                          | Only animate when component is in viewport       |
| `inViewMargin` | `string`                          | `'0px'`                                          | Margin for viewport detection                    |
| `inViewOnce`   | `boolean`                         | `true`                                           | Animate only once when entering viewport         |
| `copyButton`   | `boolean`                         | `false`                                          | Show copy to clipboard button                    |
| `writing`      | `boolean`                         | `true`                                           | Enable typing animation effect                   |
| `title`        | `string`                          | `undefined`                                      | Title text to display in header                  |
| `onDone`       | `() => void`                      | `undefined`                                      | Callback when typing animation completes         |
| `onCopy`       | `(content: string) => void`       | `undefined`                                      | Callback when copy button is clicked             |

## Implementation

Built with Shiki for syntax highlighting and Motion for animations. Uses next-themes for theme detection. Supports custom languages and themes. InView detection with configurable animation triggers.
